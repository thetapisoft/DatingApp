Desde la consola:
	dotnet -h -> Podemos ver las opciones y crear nuestros proyectos.
	code . -> Ubicados dentro de una carpeta, abriría CODE mostrando sus elementos

Dentro de la aplicaci�n:
	dotnet run	-> Lanza la aplicación WebApi
	dotnet watch run -> Lanza la aplicación WebApi pero nos permite hacer cambios que se van actualizando

	dotnet ef -h -> nos da todas las opciones para crear nuestra base de datos (ver en profundidad)



ANGULAR
Para lanzar el servidor y visualizar la página en Angular, debemos posicionarnos con el terminal en la carpeta que contiene
el proyecto en Angular y escribir -> ng serve

Colocamos localhost:4200 y veremos la página

A través de EXTENSIONS: MARKETPLACE tendremos que instalar: Angular v6 Snippets (para escribir más rápido)
		Angular Files (para crear componentes más rápidamente)
		Angular Language Service (autocompleta, va a definiciones, ....)
		angular2-switcher (navegar entre los elementos de un componente) [alt+o, alt+i, alt+u, alt+p]
		Auto Rename Tag
		Bracket Pair Colorizer
		debugger for Chrome
		Material Icon Theme
		Path Intellisense	(para autocompletar rutas)
		Prettier - Code Formatter
		TSLint (para identificar si hay código mal escrito)


BOOTSTRAP Y FONT-AWESOME
Para instalar Bootstrap y Font-Awesome en nuestro proyecto debemos posicionarnos por consola en la carpeta donde se ubica 
el proyecto Angular y teclear -> npm install bootstrap font-awesome

Para usarlos hemos de introducir en styles.css (general):
@import '../node_modules/bootstrap/dist/css/bootstrap.min.css';
@import '../node_modules/font-awesome/css/font-awesome.min.css';


GIT
Descargar la última versión desde: git-scm.com

Para poder usar un mismo repositorio para varios proyectos hay que eliminar primero todas las carpetas ocultas de git
que haya.
Podemos usar el comando 'git status' en cada proyecto para ver si hay o no documentos para el control de código.

Dentro del proyecto de Angular hay un archivo que se llama .gitignore que nos permite no trazar los cambios que se produzcan en 
esos archivos.

Para iniciar un git nuevo usamos -> git init (Lo hacemos en la carpeta que contenga todos nuestros archivos)

En cada uno de los proyectos debe haber un archivo .gitignore para poder ignorar aquello que deseemos.



ENTITY FRAMEWORK

Tecleamos en el terminal -> dotnet ef -h para ver todas las opciones.

Una vez actualicemos el EF y queramos crear una nueva migración --> dotnet ef migrations add 'Texto'.
																	dotnet ef  migrations add AddedUserEntity
Para que los cambios tengan efecto en nuestra base de datos --> dotnet ef database update

